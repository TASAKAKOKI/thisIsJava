
/*병렬처리: 멀티코어CPU환경에서 하나의 작업을 분할해서 각각의 코어가 병렬적으로 처리
 * 	: 작업 처리 시간을 줄여줌
 * 	: 자바8부터 병렬 스트림을 제공하므로, 컬렉션(배열)의 전체 요소 처리시간을 줄여줌
 *동시성(Concurrency)과 병렬성(Parallelism)
 *	동시성: 멀티 스레드 환경에서 스레드가 번갈아 가며 실행하는 성질(싱글코어CPU)
 *	병렬성: 멀티 스레드 환경에서 코어들이 스레드를 병렬적으로 실행하는 성질(멀티코어CPU)
 */

/*병렬성의 구분
 * 	데이터 병렬성:
 * 		한 작업 내에 있는 전체 데이터를 쪼개어 서브 데이터를 만들고
 * 		이 서브 데이터들을 병렬 처리해서 작업을 빨리 끝내는 것을 말한다.
 * 	작업 병렬성:
 * 		작업 병렬성은 서로 다른 작업을 병렬 처리하는 것을 말한다.
 * 		작업 병렬성의 대표적인 예는 웹서버(Web Server)이다.
 * 		웹서버는 각각의 브라우저에서 요청한 내용(다른 작업)을 개별 스레드에서 병렬로 처리한다.
 */

/*병렬 스트림은 데이터 병렬성을 구현한 것이다.
 * 	멀티 코어의 수만큼 대용량 요소를 서브 요소들로 나누고,
 *	각각의 서브 요소들을 분리된 스레드에서 병렬처리시킨다.
 *	
 *	가령, 쿼드코어(Quad Core)CPU의 경우, 4개의 서브 요소들로 나누고,
 *	4개의 스레드가 각각의 서브 요소들을 병렬처리한다.
 *
 *	병렬 스트림은 포크조인(Fork-Join)프레임워크를 이용한다.
 *	  포크조인 프레임워크의 동작 방식
 *		포크단계:
 *			데이터를 서브 데이터로 반복적으로 분리한다.
 *			서브 데이터를 멀티 코어에서 병렬로 처리한다.
 *		조인단계:
 *			서브 결과를 결합해서 최종 결과를 만들어 낸다.
 		이떄, 실제로 병렬처리스트림에서 포크 단계에서 "차례대로 요소를 N등분 하지 않는다.
 		하지만, 서브 요소를 나누는 알고리즘은 내부적으로 처리되므로, 개발자는 신경쓸 필요가 없다.
 *포크조인풀(ForkJoinPool)
 *	각각의 코어에서 서브 요소를 처리하는 것은 개별 스레드가 해야하므로 스레드 관리가 필요
 *	포크조인 프레임워크는 ExecutorService의 구현 객체인 ForkJoinPool을 사용
 *	4개의 코어를 가진 CPU일 경우 4개의 스레드를 스레드풀안에서 생성하여 각각의 코어가 각각의 스레드를 처리
 
 *병렬 스트림 생성
 *	parallelStream():
 *	인터페이스: java.util.Collection
 *	리턴타입:
 *	메소드
 *		컬렉션으로부터 병렬 스트림을 바로 리턴
 *	parallel():
 *		순차 처리 스트림을 병렬 스트림으로 변환해서 리턴
 */
