몇개의 작업을 병렬로 실행할지 결정
	예) 메인 스레드: 프로그램 시작
		작업스레드1: 네트워킹 (네트워크를 통해 데이터를 주거나 받는 작업 처리)
		작업스레드2: 드로잉 (병렬적으로 처리할 임의의 작업)
작업 스레드 생성 방법
	Thread클래스로부터 직접생성
	Thread하위 클래스로부터 생성	
	
Thread클래스로부터 직접 생성
	Thread클래스는 Runnable 인터페이스를 implements하고 이싿.
		class Task implements Runnable {
			public void run() {
				스레드가 실행할 코드;
			}
		}
	Runnable인터페이스에는 run()이라는 메소드가 정의되어 있다.
		즉, Runnable은 "함수적 인터페이스(메소드를 하나만 가지고 있는 인터페이스)"이다.

	생성방법1) Runnable객체생성후 Thread객체생성시 매개값으로 전달
		Runnable task = new Task();
		Thread thread = new Thread(task);
	생성방법2) 익명객체를 Thread객체생성시 매개값으로 전달
		Thread thread = new Thread(new Runnable() {
								public void run() {
									스레드가 실행할 코드;
								}
							}
						);
	생성방법3) 람다식 사용하여 Thread객체생성시 매개값으로 전달
		Thread thread = new Thread( () -> {
							스레드가 실행할 코드;
						});
	생성 후 스레드를 실행하는 방법
		thread.start();
			이떄, thread는 task의 run()메소드를 실행한다.
	
	스레드의 이름
		메인스레드의 이름: main'
		작업스레드의 이름: (default) Thread-n
		
		작업스레드의 이름 변경:	thread.setName("새로운 스레드 이름");
		
		코드를 실행하는 스레드의 참조 얻기
			Thread thread = Thread.currentThread();