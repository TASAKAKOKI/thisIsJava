스레드 우선순위: 여러 스레드가 있을 때 어떤 스레드가 우선순위를 가지는지를 설정하는 것

동시성과 병렬성
	동시성(Concurrency):
		멀티작업을 위해 하나의 코어에서 멀티스레드가 번갈아 가며 실행하는 성질
	병렬성(Parallelism):
		멀티작업을 위해 멀티 코어에서 개별 스레드를 동시에 실행하는 성질
스레드 스케줄링
	스레드의 개수가 코어의 수보다 많을 경우
		스레드 스케줄링: 스레드를 어떤 순서로 동시성으로 실행할 것인가를 결정
		스레드 스케줄링에 의해 스레드들은 번갈아 가면서 그들의 run()메소드를 조금씩 실행
		스레드들은 생성되면 "실행대기상태"에 있다.
	자바의 스레드 스케줄링
		우선순위(Priority)방식과 순환할당(Round-Robin)방식을 사용
			우선순위방식(코드로 제어가능)
				우선순위가 높은 스레드가 실행상태를 더 많이 가지도록 스케줄링 하는 방식
			순환할당방식(코드로 제어할 수 없음)
				시간할당량(Time Slice)을 정해서 하나의 스레드를 정해진 시간만큼 실행하는 방식

스레드 우선순위
	스레드들이 동시성을 가질 경우 우선적으로 실행할 수 있는 순위
	우선순위1(낮음)에서부터 10(높음)까지로 부여
		모든 스레드들은 기본적으로 5의 우선순위를 할당
	우선순위 변경방법
		thread.setPriority(우선순위);
			우선순위는 정수값으로 주어도 되고,
			Thread의 상수(static final)를 사용해도 된다.
				Thread.MAX_PRIORITY
				Thread.MIN_PRIORITY
				Thread.NORM_PRIORITY
	우선순위 효과
		싱글코어의 경우
			우선순위가 높은 스레드가 실행 기회를 더 많이 가지기 떄문에 우선순위가 낮은 스레드보다 작업을 빨리 끝낸다.
		멀티코어의 경우
			쿼드 코어의 경우에는 4개의 스레드가 병렬성으로 실행될 수 있다.
			따라서, 4개이하의 스레드를 실행할 경우에는 우선순위방식은 크게 영향을 미치지 못한다.
			최소한 5개 이상의 스레드가 실행되어야 우선 순위의 영향을 받는다.