JavaFX 애플리케이션
	FXML(레이아웃) + CSS(스타일) + Java(컨트롤러, 로직 등)
	
JavaFX CSSS
	W3C CSS 버전 2.1스펙(http://www.w3.org/TR/CSS21)을 준수한다
	FXML 인라인 스타일 또는 외부 CSS파일로 작성할 수 있다.
	반복적으로 적용된다면, 외부 CSS파일을 만드는 것이 향후 수정, 확장 등에 이롭다.
	W3C CSS 속성명 앞에 "-fx-"가 더 붙는다.
	
인라인(inline) 스타일
	<컨테이너 style="속성:값; 속성:값; ..">
	<컨트롤 style="속성:값; 속성:값; ..">
	
	<Label id="label1" text="검정바탕, 노란글씨:
		   style="-fx-background-color: black; -fx-text-fill: yellow; -fx-padding: 5;" />
   	<Label id="label2" text="파란바탕, 흰글씨:
		   style="-fx-background-color: blue; -fx-text-fill: white; -fx-padding: 5;" />
		 
외부 CSS 스타일
	인라인 스타일 문제점
		동일한 스타일을 적용하는 컨트롤이 많을수록 중복해서 작성해야 하는 코드가 늘어난다.
		FXML과 CSS가 뒤섞여 추후 유지 보수가 어렵다
	선택자:
		외부 CSS파일은 스타일을 적용할 컨테이너와 컨트롤을 선택해주는 선택자가 필요하다.
		
	선택자의 종류
		Type 선택자: Type { 속성:값; 속성:값; ... }
			Label {
				-fx-padding: 5;
			}
				//Label Type에 공통적으로 적용되는 스타일 작성
		id 선택자: #id { 속성:값; 속성:값; ... }
			#lblId {
				-fx-background-color: black;
				-fx-text-fill: yellow;
			}
				//특정 id를 가진 태그에게만 적용되는 스타일 작성
				//동일 id는 보통 한 문서내에 하나의 태그만 가진다.
		class 선택자: .class { 속성:값; 속성:값; ... }
			.lblClass {
				-fx-background-color: blue;
				-fx-text-fill: white;
			}
				//Type선택자는 모든 타입에 같은 적용을 한다면,
				//Class선택자는 타입을 또 다시 몇개의 class를 동일한 styleClass속성으로 그룹화하여 class별로 다른 적용을 한다.
					
		Type 선택자와 class 선택자 조합
			Label.className {
				-fx-background-color: blue;
				-fx-text-fill: white;
			}
				//Label타입과 className을 styleClass속성 값으로 갖는 태그들에게 적용하는 방법이다
		
		상태별 선택자(pseudo-classes)
			상태							상태별 선택자
			입력 가능한 상태				선택자: focused {속성:값; 속성:값;...}
			마우스가 컨트롤 위에 있는 상태	 	선택자: hover {속성:값; 속성:값;...}
			마우스로 컨트롤을 누른 상태		선택자: pressed {속성:값; 속성:값;...}
	
	CSS 파일 적용
		개별 컨테이너 또는 컨트롤에 적용하지 않고,
		Scene에 추가하여  Scene 내부의 모든 컨테이너와 컨트롤에 적용
			scene.getStylesheets().agg(getClass().getResource("app.css").toString());
			
border 속성
	컨테이너 및 컨트롤의 경계선의 스타일을 설정
		속성					설명
		-fx-border-color	경계선의 색상
		-fx-border-insets	내부 경계선의 위치
		-fx-border-radius	둥근 모서리를 위한 원의 반지름
		-fx-border-style	경계선의 스타일(실선, 점선)
		-fx-border-width	경계선의 굵기
	
	-fx-border-color
		-fx-border-color: red;				//색이름을 값으로 주기
		-fx-border-color: #ff0000;			//#색상번호를 값으로 주기
		-fx-border-color: rgba(255,0,0,0);	//rgba(red값, green값, blue값, 투명도)를 값으로 주기
	
	-fx-border-radius
		-fx-border-color: red;				//색이름을 값으로 주
		-fx-border-width: 1;				//경계선 굵기를 1로 지정
		-fx-border-radius: 20;				//경계선 모서리를 둥글게 설정
	
	-fx-border-insets
		-fx-border-insets: 0, 10, 20;
		-fx-border-color:	red, green, blue;
		-fx-border-width:	1, 1, 1;
		
		-fx-border-insets: 0, 10, 20;
		-fx-border-color: red, green black blue yellow, blue;
		-fx-border-width: 1, 1, 1 3 3 1;
	
	-fx-border-style
		-fx-border-color: red;
		-fx-border-width: 2;
		-fx-border-style: solid dotted dashed segment(3,2,8,2);		//segment(첫번째 선의 길이, 첫번째와 두번째 사이 공간, 두번째 선의 길이, 두번째와 첫번째 사이 공간)
		
background 속성
	컨테이너 및 컨트롤의 배경 스타일을 설정
		속성							설명
		-fx-background-color		배경 색상
		-fx-background-image		배경 이미지
		-fx-background-position		배경 이미지 위치(top,right,bottom,left,center)
		-fx-background-repeat		배경 이미지 반복 여부(no-repeat 반복하지 않음)
		
	-fx-background-color
		-fx-background-color: red;
		-fx-background-color: #ff0000;
		-fx-background-color: rgba(255,0,0,0);
		
		-fx-background-color: linear-gradient(to right, black, white);
		
		-fx-background-color: radial-gradient(center 50% 50%, radius 50%, #ffffff 10%, #000000);
																
	-fx-background-image
		-fx-background-image: url("이미지 경로");
		-fx-background-repeat: no-repeat;
		-fx-background-position: center;
	
폰트 속성
	속성							설명
	-fx-font-size				폰트 크기
	-fx-font-family				폰트 종류
	-fx-font-weight				폰트 굵기(bold)
	-fx-font-fill				폰트 색상(단색, 선형 그라디언트, 원형 그라디언트)

	shadow효과(-fx-effect)
		-fx-effect: dropshadow(three-pass-box, 그림자색상, radius, spread, offsetX, offsetY);
		-fx-effect: innershadow(three-pass-box, 그림자색상, radius, choke, offsetX, offsetY);
			매개값				설명
			blur-type: 			gaussian, one-pass-box, three-pass-box, two-pass-box
			radius:				blur kernel의 반지름으로 0.0~127.0 사이의 값을 가짐. 기본값은 10
			spread, choke:		그림자의 spread와 choke로 0.0~1.0 사이의 값을 가짐. 기본값은 0
			offsetX, offsetY:	그림자의 편차