정규표현식(Regular Expression)
	문자열이 정해져 있는 형식으로 구성되어 있는지 검증할 때 사용한다.
		이메일, 전화번호, 비밀번호 등 검증시 사용
	
	문자 또는 숫자 기호와 반복기호가 결합된 문자열이다.
	
정규표현식 작성방법
	기본적인 기호
		[] 		:: 한개의 문자 [abc]: abc증 하나의 문자 /  [^abc]: abc 이외의 하나의 문자 / [a-zA-Z] a~z A~Z 중 하나의 문자
		\d		:: 한개의 숫자, [0-9]와 동일
		\s		:: 공백
		\w		:: 한 개의 알파벳 또는 한 개의 숫자, [a-zA-Z0-9]와 동일
		?		:: 없음 또는 한 개
		*		:: 없음 또는 한 개 이상
		\.		:: .
		.		:: 모든 문자 중 한 개의 문자
		+		:: 한 개 이상
		{n}		:: 정확히 n개
		{n,}	:: 최소한 n개
		{n,m}	:: n개에서부터 m개까지
		()		:: 그룹핑
		
	전화번호 예시 
		(02|010)-\d{3,4}-\d{4}
			02또는 010으로 시작하고 두번째 자리에는 3자리 또는 4자리수가 오며, 마지막 자리에는 4자리수가 정해져있다.
	이메일 예시
		\w+@\w+\.\w+(\.\w+)?
		한개 이상의 문자, @, 한개 이상의 문자, (., 한개 이상의 문자)가 한개 또는 없음   
			로 구성된 이메일 형식을 정함
Pattern 클래스
	정규표현식으로 문자열을 검증: Pattern클래스의 정적메소드인 matches()를 이용
		boolean result = Pattern.matches(정규식, 검증하고자 하는 문자열);
			정규식대로 문자열이 구성되어 있다면 true를, 그렇지 않다면 false를 반환