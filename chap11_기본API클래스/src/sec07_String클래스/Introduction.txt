java.lang.String클래스의 인스턴스


String객체 생성자
	byte[]배열을 문자열로 변환하는 생성자
		:: 파일의 내용을 읽거나, 네트워크를 통해 받은 데이터는 보통 byte[]배열이므로 이것을 문자열로 변환하기 위해 사용
	
		//배열 전체를 String 객체 생성
		String str = new String(byte[] bytes);
		//지정한 문자셋으로 디코딩
		String str = new String(byte[] bytes, String charsetName);
		
		//배열의 offset 인덱스 위치부터 length 개 만큼 String 객체로 생성
		String str = new String(byte[] bytes, int offset, int length);
		//지정한 문자셋으로 디코딩
		String str = new String(byte[] bytes, int offset, int length, String charsetName);
		
	키보드로부터 읽은 바이트 배열을 문자열로 반환
		byte[] bytes = new byte(100); //default로 모든 인덱스에 0이 들어간 배열 생성
		int readByteNo = System.in.read(bytes); //입력한 내용을 byte값으로 순서대로 배열에 저장
												//이때, 키보드로 입력한 값 + 캐리지리턴(\r) + 라인피드(\n)의 코드값이 바이트 배열에 저장된다.
												//그리고 System.in.read()는 읽은 바이트 수(입력된 문자열 수+2(캐리지리턴,라인피드))를 리턴한다.
		String str = new String(bytes,0,readByteNo-2); 

String클래스의 주요 메소드
	String은 문자열의 추출, 비교, 찾기, 분리, 변환 등과 같은 다양한 메소드를 가지고 있다.
	사용빈도가 높은 메소드는 알아두는 것이 좋다
		리턴타입		:: 메소드명(매개변수)										::설명
		int			:: length()												::총 문자의 수를 리턴 
		int			:: indexOf(String str)									::문자열내에서 주어진 문자열의 위치를 리턴
		boolean		:: equals(Object object)								::두 문자열을 비교
		char		:: charAt(int index)									::특정 위치의 문자 리턴
		byte[]		:: getBytes()											::byte[]로 리턴
		byte[]		:: getBytes(Charset charset)							::주어진 문자셋으로 인코딩한 byte[]로 리턴
		String		:: replace(CharSequence target, CharSequnce replacement)::target부분을 replacement로 대치한 새로운 문자열을 리턴
		String		:: substring(int beginIndex)							::beginIndex 위치에서 끝까지 잘라낸 새로운 문자열을 리턴
		String		:: substring(int beginIndex, int endIndex)				::beginIndex 위치에서 endIndex 전까지 잘라낸 새로운 문자열을 리턴
		String		:: toLowerCase()										::알파벳 소문자로 변환한 새로운 문자열을 리턴
		String		:: toUpperCase()										::알파벳 대문자로 변환한 새로운 문자열을 리턴
		String		:: trim()												::앞뒤 공백을 제거한 새로운 문자열을 리턴
		String		:: valueOf(int i)										::기본 타잆값을 문자열로 리턴
					:: valueOf(double d)									::기본 타잆값을 문자열로 리턴